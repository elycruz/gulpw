bundlesPath: ./path/to/bundles

scriptRenderer: ejs

bundleConfigFormat: yaml

bundleConstructor: ./src/bundle/Bundle

localConfigPath: ./.gulpw

staticTasks:
  prompt:
    deploy:
    config:
      localConfigBackupPath: ./.gulpw/bundle.wrangler.config.local.yaml

tasks:

  compass:
    compassProjectRoot: null # config.rb home

  concat:
    header: |
      /*!
       * Company Name http://www.company-website.com
       * <%= bundle.alias %>.<%= fileExt %> <%= bundle.version %> (<%= (new Date()).getTime() %>)
       * <%= bundle[section-name].md5 %>
       */
    cssBuildDir: some/path/to/build/path
    jsBuildDir: some/path/to/build/path
    htmlBuildDir: some/path/to/build/path
    allowedFileTypes:
      - js
      - css
      - html
    useVersionNumInFileName: false
    template:
      templateVariable: someGlobalVar
      templatesKey: templates
      setterFunction: null
      removeWhitespace: true
      tmpWritePath: ./.gulpw/tmp

  minify:
    header: |
      /*! Company Name http://www.company-website.com <%= bundle.alias %>.js <%= bundle.version %> <%= bundle[section-name].md5 %> */
    cssBuildDir: some/path/to/build/path
    htmlBuildDir: some/path/to/build/path
    jsBuildDir: some/path/to/build/path
    allowedFileTypes:
      - js
      - css
      - html
    htmlTaskOptions:
      spare: true
      comments: false
    cssTaskOptions:
      keepSpecialComments: 0 # "* for keeping all (default), 1 for keeping first one only, 0 for removing all" @see https://www.npmjs.org/package/gulp-minify-css
    jsTaskOptions: {}
    useMinPreSuffix: true
    useVersionNumInFileName: false
    template:
      templatesParentVar: someGlobalVar
      templatesKey: templates
      removeWhitespace: true
      templateTypeKeys:
        - mustache
        - handlebars
        - ejs

  # Build Task (Looks through bundle.config.yaml file and runs
  # all tasks that are not in the `ignoreTasks` array in this config.
  build:

    ignoredTasks:
      - clean
      - deploy

    # This is a global lint flag that is used if there is a lint task specified for a section
    lintBeforeBuild: true

  # Deploy Task
  deploy:

    # Other files to be deployed
    otherFiles: []

    # Global deploy artifacts flag (used if no `deployArtifact` field is found for a section in this config
    deployArtifacts: true

    # Should files be linted before deploy
    lintBeforeDeploy: false

    # Local deploy config used to override local bundle.wrangler.yaml deploy config options.  Stored in `localConfigPath` whose default value is '.gulpw'
    localDeployFileName: deploy.yaml

    # Use one-to-one paths for undefined/null deploy paths.
    # If this is false and an undefined/null deploy path is found for a type an error
    # is thrown and the deploy tasks exits
    useOneToOnePaths: false

    deployUsingUnixStylePaths: true

    # Options written by `prompt:deploy`
    developingDomain: null
    devHostnamePrefix: null
    devHostname: null
    port: 22
    username: null
    password: null
    publickeyPassphrase: null
    privatekeyLocation: null

    # File types that are allowed for deployment
    allowedFileTypes:
      - js
      - css
      - html
      - json
      - yaml
      - jpg
      - png
      - gif
      - md
      - mkd

    domainsToDevelop:

      # Hostname to develop for
      gulpw-sample.somedomain.com:

        # Servers where user can develop for `domainToDevelopFor` (in this case `domainToDevelopFor` is `gulpw-sample.somedomain.com`)
        devHostnames: # slots/hosts
          - devslot1.gulpw-sample.somedomain.com
          - devslot2.gulpw-sample.somedomain.com
          - devslot3.gulpw-sample.somedomain.com

        # All website instance prefixes represent the same website just different
        # instances of the website.

        # If object then we expect the hostname prefix (key) and site instance's folder path
        devHostnamePrefixes:
          - web1-
          - web2-
          - web3-

        # Root folder on the server to use for deployments (prefix path for file paths being deployed)s)
        deployRootFolder: null

        # Directories for deploying file types to specific paths within the selected {web-host}/[{web-host-prefix]
        typesAndDeployPathsMap:
          font: public/media/fonts/
          html: public/
          video: public/media/videos/
          image: public/media/images/
          js: public/js/
          css: public/css/

  # Watch Task Defaults
  watch:

    # Tasks to ignore on the bundle level (watch creates it's own collection of deploy tasks from the bundle(s) registered with it)
    ignoredTasks:
      - clean
      - deploy

    # Tasks to run on file changes ** Note ** only tasks that match changed file types will be run
    tasks:
      - build
#      - deploy

    # Other files to watch (can be overridden from the bundle level as well)
    otherFiles: null

    # Flags that can be passed to the watch task ** Note ** These flags are available to all tasks
    # besides the watch task as they run from the same terminal session.
    flags:

      # This flag specifies that minification should not occur
      dev: false

  # RequireJs Defaults
  requirejs: {}

  # Browserify Defaults
  browserify: {}

  compass: {}

  csslint:
    options: {}

  jshint:
    useJshintRc: false
    jsHintRcPath: ./configs/.jshintrc
    ignoreFiles: null
    options:
      predef:
        - $
        - _
        - amplify
        - Backbone
        - browserify
        - define
        - jQuery
        - Modernizr
        - Mustache
        - Marionette
        - require

  clean:
    allowedFileTypes:
      - js
      - css
      - html

  mocha:
    testsDir: null
    options: null

#  jasmine:
#    testsDir: null
#    options: null
