bundlesPath: ./path/to/bundles

bundleConfigFormats:
  - .yaml
  - .js
  - .json

localConfigPath: ./.gulpw

staticTasks:
  prompt: {}

tasks:

  all:
    tasks:
      - build
      - deploy

  # Browserify Defaults
  browserify: {}

  # Build Task (Looks through {bundle-alias}.yaml file and runs
  # all tasks that are not in the `ignoreTasks` array in this config.
  build:

    prelimTasks:
      - mocha
      - jasmine

    ignoredTasks:
      - clean
      - deploy
      - jshint
      - csslint

  clean:
    allowedFileTypes:
      - js
      - css
      - html

  compass:
    compassProjectRoot: null # config.rb home

  concat:
    header: |
      /*!
       * Company Name http://www.company-website.com
       * <%= bundle.alias %>.<%= fileExt %> <%= bundle.version %> (<%= (new Date()).getTime() %>)
       * <%= bundle[section-name].md5 %>
       */
    cssBuildDir: some/path/to/build/path
    jsBuildDir: some/path/to/build/path
    htmlBuildDir: some/path/to/build/path
    allowedFileTypes:
      - js
      - css
      - html
    useVersionNumInFileName: false
    template:
      templatePartial: null # script partial to render for each file entry in the `templates` hash.
      compressWhitespace: true
      templateTypeKeys:
        - mustache
        - handlebars
        - ejs

  copy: {}

  csslint:
      csslintrc: null

  # Deploy Task
  deploy:

    # Other files to be deployed
    otherFiles: []

    # Global deploy artifacts flag (used if no `deployArtifact` field is found for a section in this config
    deployArtifacts: true

    # Should files be linted before deploy
    lintBeforeDeploy: false

    # Local deploy config used to override local bundle.wrangler.yaml deploy config options.  Stored in `localConfigPath` whose default value is '.gulpw'
    localDeployFileName: deploy.yaml

    # Use one-to-one paths for undefined/null deploy paths.
    # If this is false and an undefined/null deploy path is found for a type an error
    # is thrown and the deploy tasks exits
    useOneToOnePaths: false

    deployUsingUnixStylePaths: true

    # Options written by `prompt:deploy`
    developingDomain: null
    hostnamePrefix: null
    hostname: null
    port: 22
    username: null
    password: null
    publickeyPassphrase: null
    privatekeyLocation: null

    # File types that are allowed for deployment
    allowedFileTypes:
      - js
      - css
      - html
      - json
      - yaml
      - jpg
      - png
      - gif
      - md
      - mkd

    domainsToDevelop:

      # Hostname to develop for
      gulpw-sample.somedomain.com:

        # Servers where user can develop for `domainToDevelopFor` (in this case `domainToDevelopFor` is `gulpw-sample.somedomain.com`)
        hostnames: # slots/hosts
          - -devslot1.gulpw-sample.somedomain.com
          - -devslot2.gulpw-sample.somedomain.com
          - -devslot3.gulpw-sample.somedomain.com

        # All website instance prefixes represent the same website just different
        # instances of the website.

        # If object then we expect the hostname prefix (key) and site instance's folder path
        hostnamePrefixes:
          - web1
          - web2
          - web3

        hostnamePrefixFolders: null # If set will use these folders to suffix to `deployRootFolder`
          #web1: website1
          #web2: website2
          #web3: website3

        # Root folder on the server to use for deployments (prefix path for file paths being deployed)s)
        deployRootFolder: null # example: sites/<%= devHostnamePrefix %><%= devHostname %> (recieves the `deploy` has from this config)

        # Directories for deploying file types to specific paths within the selected {web-host}/[{web-host-prefix]
        typesAndDeployPathsMap:
          font: public/media/fonts/
          html: public/
          video: public/media/videos/
          image: public/media/images/
          js: public/js/
          css: public/css/

  jasmine:
    files: null # testDir or array of files (test files)
    options: null

  jshint:
    jshintrc: ./configs/.jshintrc
    ignoreFiles: null
    options:
      predef:
        - $
        - _
        - amplify
        - Backbone
        - browserify
        - define
        - jQuery
        - Modernizr
        - Mustache
        - Marionette
        - require
        - sjl

  minify:
    header: |
      /*! Company Name http://www.company-website.com <%= bundle.alias %>.js <%= bundle.version %> <%= bundle[section-name].md5 %> */
    cssBuildDir: some/path/to/build/path
    htmlBuildDir: some/path/to/build/path
    jsBuildDir: some/path/to/build/path
    allowedFileTypes:
      - js
      - css
      - html
    htmlTaskOptions:
      spare: true
      comments: false
    jsTaskOptions: {}
    useMinPreSuffix: false
    useVersionNumInFileName: false
    template:
      templatePartial: null
      compressWhitespace: true
      templateTypeKeys:
        - mustache
        - handlebars
        - ejs

  mocha:
    files: null # testDir or array of files (test files)
    options: null

  # RequireJs Defaults
  requirejs: {}

  # Watch Task Defaults
  watch:

    # Tasks to ignore on the bundle level (watch creates it's own collection of deploy tasks from the bundle(s) registered with it)
    ignoredTasks:
      - clean
      - deploy

    # Tasks to run on file changes ** Note ** only tasks that match changed file types will be run
    tasks:
      - build
      - deploy

    # Other files to watch (can be overridden from the bundle level as well)
    otherFiles: null
