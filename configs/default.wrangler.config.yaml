bundlesPath: ./path/to/bundles

scriptRenderer: ejs

bundleConfigFormat: yaml

bundleConstructor: ./src/bundle/Bundle

staticTasks:
  prompt:
    deploy:
      questions:
        -
          type: list
          messsage: Where would you like to deploy to? (use arrow keys)
          name: server
          choices: list-here
        -
          type: list
          messsage: Which website instance would you like to use? (use arrow keys)
          name: site
          choices: list-here
        -
          type: input
          messsage: "Which network port would you like to use? (default: <%= defaultPortNumber %>)"
          name: port
          default: <%= defaultPortNumber %>
        -
          type: list
          messsage: Which authentication method would you like to use? (use arrow keys)
          name: authType
          choices:
            - publickey
            - password
        -
          type: input
          messsage: What is the user password? (<%= defaultUserName %>)
          name: password
          default: admin
        -
          type: input
          messsage: What is the ssh username you would like to use? (<%= defaultUserName %>)
          name: username
          default: admin
        -
          type: input
          messsage: Where is your ssh private key? (<%= defaultUserName %>)
          name: privatekeyLocation
        -
          type: input
          messsage: What is your ssh pass phrase?
          name: passphrase

tasks:

  concat:
    header: |
      /*!
       * Company Name http://www.company-website.com
       * <%= bundle.name %>.<%= fileExt %> <%= bundle.version %> (<%= (new Date()).getTime() %>)
       * <%= bundle[section-name].md5 %>
       */
    cssBuildDir: some/path/to/build/path
    jsBuildDir: some/path/to/build/path
    htmlBuildDir: some/path/to/build/path
    allowedFileTypes:
      - js
      - css
      - html
    useVersionNumInFileName: false

  minify:
    header: |
      /*! Company Name http://www.company-website.com <%= bundle.name %>.js <%= bundle.version %> <%= bundle[section-name].md5 %> */
    cssBuildDir: some/path/to/build/path
    htmlBuildDir: some/path/to/build/path
    jsBuildDir: some/path/to/build/path
    allowedFileTypes:
      - js
      - css
      - html
    htmlTaskOptions:
      spare: true
      comments: false
    cssTaskOptions:
      keepSpecialComments: 0 # "* for keeping all (default), 1 for keeping first one only, 0 for removing all" @see https://www.npmjs.org/package/gulp-minify-css
    jsTaskOptions: {}
    useMinPreSuffix: true
    useVersionNumInFileName: false

  # Build Task
  build:

    ignoredTasks:
      - clean

    # Tasks to run if task is not overwritten by flag (see flags below)
    tasks:
#      - compass
#      - jslint
#      - csslint
#      - htmllint
#      - browserify
#      - requirejs
      - concat
      - minify

    # This is a global lint flag that is used if there is a lint task specified for a section
    lintBeforeBuild: true

    # Concatenate files if files exists
    concat: true

    # Minify files if files exists and no `--dev` flag has been specefied on run
    minify: true

    # Runs require js section if exists
    requirejs: true

    # Runs browserify section if exists
    browserify: true

  # Deploy Task
  deploy:

    # Files to be deployed
    files: []

    # Global deploy artifacts flag (used if no `deployArtifact` field is found for a section in this config
    deployArtifacts: true

    # Should files be linted before deploy
    lintBeforeDeploy: false

    hosts:

      # Hostname to develop for
      gulpw-sample.somedomain.com:

        # Servers where user can develop for host key (in this case host key is `gulpw.elycruz.com`)
        servers: # slots
          - devslot1.gulpw-sample.somedomain.com
          - devslot2.gulpw-sample.somedomain.com
          - devslot3.gulpw-sample.somedomain.com

        # all sites represent the same website just different instances of the website
        sites: # instances
          - web1
          - web2
          - web3

        # directories for deploying file types to the website instance chosen
        paths: # dir
          font: public/media/fonts/
          html: public/media/html/
          video: public/media/videos/
          image: public/media/images/
          javascript: public/js/
          stylesheet: public/css/

    port: 22,
    authType: publickey
    username: admin
    password: null
    publickeyPassphrase: null
    privatekeyLocation: ~/.ssh/id_rsa



  # Watch Task Defaults
  watch:

    # Tasks to run on file changes ** Note ** only tasks that match changed file types will be run
    tasks:
      - build
#      - deploy

    # Other files to watch (can be overridden from the bundle level as well)
    otherFiles: null

    # Flags that can be passed to the watch task ** Note ** These flags are available to tasks as they run via the `gulp` object
    flags:

      # This flag specifies that minification should not occur
      dev: false

  # RequireJs Defaults
  requirejs: {}

  # Browserify Defaults
  browserify: {}

  compass: {}

  csslint:
    options: {}

  jshint:
    useJshintRc: false
    jsHintRcPath: ./configs/.jshintrc
    options:
      predef:
        - $
        - _
        - amplify
        - Backbone
        - browserify
        - define
        - jQuery
        - Modernizr
        - Mustache
        - marionette
        - require

  clean:
    allowedFileTypes:
      - js
      - css
      - html
