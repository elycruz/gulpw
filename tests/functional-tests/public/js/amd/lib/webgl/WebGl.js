define(["sjl"],function(){"use strict";return sjl.Extendable.extend(function WebGlContext(elmOrSelector){var self=this,gl=null,elm=null,classOfElmOrSelector=sjl.classOf(elmOrSelector),selector=null;if(sjl.empty(elmOrSelector))throw new Error('`sjl.WebGlContext` requires parameter 1 to be either an HtmlElement or a String.Parameter type recieved "'+classOfInitParam+'".');switch(classOfElmOrSelector){case"HTMLCanvasElement":gl=self.getGlContextFromElm(elmOrSelector);break;case"String":selector=elmOrSelector,elm=document.querySelector(elmOrSelector),gl=self.getGlContextFromElm(elm);break;default:selector=elmOrSelector,elm=document.querySelector(elmOrSelector),gl=self.getGlContextFromElm(elm)}self.glInstance=gl,self.element=elm,self.selector=selector},{getGlContextFromElm:function(canvasElm){var gl=null,failureMessage="Failed to get webgl context.  Could not get gl context for this browser.";if(!sjl.classOfIs(canvasElm.getContext,"Function"))throw new Error(failureMessage);try{gl=canvasElm.getContext("webgl")||canvasElm.getContext("experimental-webgl")}catch(e){throw new Error(failureMessage)}return gl}})});